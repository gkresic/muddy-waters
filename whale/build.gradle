apply plugin: 'application'

mainClassName = 'com.steatoda.muddywaters.whale.WhaleCmd'

dependencies {

	implementation	'ch.qos.logback:logback-core:1.3.0-alpha5',		// Jetty 10 brings slf4j-api:2.0.0-alpha1
					'ch.qos.logback:logback-classic:1.3.0-alpha5',	// Jetty 10 brings slf4j-api:2.0.0-alpha1
					'org.slf4j:slf4j-api:1.7.30',
					'org.slf4j:log4j-over-slf4j:1.7.30',
					'org.slf4j:jcl-over-slf4j:1.7.30',
					'com.google.inject:guice:5.0.0-BETA-1',						// 4.x doesn't play well with JPMS
					'com.google.inject.extensions:guice-servlet:5.0.0-BETA-1',	// 4.x doesn't play well with JPMS
					'org.eclipse.jetty:jetty-server:10.0.0',
					'org.eclipse.jetty:jetty-webapp:10.0.0',
					'org.eclipse.jetty:jetty-rewrite:10.0.0',
					'org.jboss.resteasy:resteasy-jaxrs-all:4.6.0.Final',
					'org.jboss.resteasy:resteasy-servlet-initializer:4.6.0.Final',
					'org.jboss.resteasy:resteasy-guice:4.6.0.Final',
					'org.jboss.resteasy:resteasy-jackson2-provider:4.6.0.Final',
					'com.fasterxml.jackson.core:jackson-core:2.12.1'
}

distributions {
	main {
		contents {
			rename('jetty.template.xml', 'jetty.xml')
			rename('logback.template.xml', 'logback.xml')
		}
	}
}

processResources {
	filesMatching(["**/whale.properties"]) {
		expand version: version
	}
}

startScripts {
	doLast {
		unixScript.text = unixScript.text.replace('CLASSPATH=', 'CLASSPATH=$WHALE_CONF:$APP_HOME/conf:') 
		windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=%WHALE_CONF%;%APP_HOME%\\conf;')
	}
}

run {
	classpath += files("${System.env.WHALE_CONF}", "${System.properties.WHALE_CONF}", "${project.buildDir}/install/whale/conf")
	standardInput = System.in
}

task processWar(type: Copy) {
    from('src/main/dist/war') {
        include '**/*'
    }
    into "${project.buildDir}/war/main"
}

classes {
    classes.dependsOn processWar
}

build.dependsOn installDist

distTar.enabled = false
distZip.enabled = false
