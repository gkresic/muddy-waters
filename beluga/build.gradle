buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.1'
	}
}

plugins {
	id 'org.beryx.runtime' version '1.13.0'
}

apply plugin: 'application'
apply plugin: 'com.google.protobuf'

ext {
	protobufVersion = '3.21.12'
}

dependencies {

	implementation 'ch.qos.logback:logback-core:1.5.18'
	implementation 'ch.qos.logback:logback-classic:1.5.18'
	implementation 'org.slf4j:slf4j-api:2.0.17'

	implementation 'org.greenrobot:eventbus-java:3.3.1'
	annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.3.1'

	implementation 'com.google.dagger:dagger:2.44.2'
	annotationProcessor 'com.google.dagger:dagger-compiler:2.44.2'

	implementation ('io.javalin:javalin:6.6.0');

	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.19.0'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.19.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'

	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

	implementation 'com.dslplatform:dsl-json:2.0.2'
	annotationProcessor 'com.dslplatform:dsl-json:2.0.2'

}

processResources {
	filesMatching(["**/beluga.properties"]) {
		expand version: version
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	// use more standard 'sourceS' instead of 'source' (TODO doesn't work, results in empty 'generated' folder?)
	//generatedFilesBaseDir = "$buildDir/generated/sources/proto"
}

compileJava {
	// https://greenrobot.org/eventbus/documentation/subscriber-index/
	options.compilerArgs += '-AeventBusIndex=com.steatoda.muddywaters.beluga.BelugaEventBusIndex'
}

runtime {
	options = [
		'--strip-debug',
		'--compress', '2',
		'--no-header-files',
		'--no-man-pages'
	]
	modules = [
		'java.xml'
	]
}

application {
	mainClass = 'com.steatoda.muddywaters.beluga.BelugaCmd'
}

distributions {
	main {
		contents {
			rename('logback.template.xml', 'logback.xml')
		}
	}
}

startScripts {
	doLast {
		unixScript.text = unixScript.text.replace('CLASSPATH=', 'CLASSPATH=$BELUGA_CONF:$APP_HOME/conf:')
		windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=%BELUGA_CONF%;%APP_HOME%\\conf;')
	}
}

run {
	classpath += files("${System.env.BELUGA_CONF}", "${System.properties.BELUGA_CONF}", "${project.buildDir}/install/beluga/conf")
	standardInput = System.in
}

build.dependsOn installDist

distTar.enabled = false
distZip.enabled = false
